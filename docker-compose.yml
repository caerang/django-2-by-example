version: '3.6'

services:
  db:
    container_name: 'django2-db'
    image: postgres:10.4
    restart: always
    volumes:
      - type: volume
        source: ./database
        target: /var/lib/postgresql/data
        volume:
          nocopy: true

  web:
    container_name: 'django2-web'
    build: .
    image: &app django2
    command: python3 manage.py runserver 0.0.0.0:8000
    restart: always
    volumes:
      - ./myshop:/app
    ports:
      - "25000:8000"
    depends_on:
      - db
      - rabbitmq

  redis:
    container_name: 'django2-redis'
    image: 'redis:4.0.11-stretch'
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - 'redisdata:/data'

  celery:
    container_name: 'django2-celery'
    image: *app
    command: celery -A conf worker --concurrency=1 --hostname=celery@%h --loglevel=INFO
    environment:
      - CELERY_BROKER=ampq://admin:mypass@rabbitmq:5672
    volumes:
      - ./myshop:/app
    depends_on:
      - rabbitmq
      - redis
  
  flower:
    container_name: 'django2-flower'
    image: *app
    command: celery flower -A conf --address=127.0.0.1 --port=5555
    volumes:
      - ./myshop:/app
    ports:
      - "5555:5555"
    depends_on:
      - rabbitmq
      - redis
      - celery

  rabbitmq:
    container_name: 'django2-rabbitmq'
    image: rabbitmq:3.7.7
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  database:
  redisdata: